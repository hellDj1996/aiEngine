# Generated by Django 4.1.7 on 2023-04-10 17:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0001_initial'),
        ('dataset', '0002_rename_name_file_file_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessedDataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('subset', models.CharField(blank=True, choices=[('Training', 'training'), ('Validation', 'validation'), ('Testing', 'testing')], max_length=20, null=True)),
                ('sample_counts', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Processed Dataset',
            },
        ),
        migrations.CreateModel(
            name='RawDataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete')], max_length=20)),
                ('name', models.CharField(max_length=256)),
                ('train_ratio', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('val_ration', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('test_ratio', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_public', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectDataset', to='project.project')),
            ],
            options={
                'verbose_name_plural': 'Raw Dataset',
            },
        ),
        migrations.CreateModel(
            name='RawDatasetFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dataset.file')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('raw_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawDataFile', to='dataset.rawdataset')),
            ],
            options={
                'verbose_name_plural': 'Raw Dataset File',
            },
            bases=('dataset.file',),
        ),
        migrations.CreateModel(
            name='ProcessedDatasetFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dataset.file')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('processed_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processedDataFile', to='dataset.processeddataset')),
            ],
            options={
                'verbose_name_plural': 'Processed Dataset File',
            },
            bases=('dataset.file',),
        ),
        migrations.AddField(
            model_name='processeddataset',
            name='raw_dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processedData', to='dataset.rawdataset'),
        ),
        migrations.CreateModel(
            name='Annotations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('format', models.CharField(choices=[('COCO', 'coco'), ('Pascal VOC', 'pascalVoc'), ('YOLO', 'yolo')], max_length=20)),
                ('count', models.IntegerField(default=0)),
                ('processed_dataset', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='dataset.processeddataset')),
            ],
            options={
                'verbose_name_plural': 'Annotation',
            },
        ),
        migrations.CreateModel(
            name='AnnotationFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dataset.file')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotationFile', to='dataset.annotations')),
            ],
            options={
                'verbose_name_plural': 'Annotation File',
            },
            bases=('dataset.file',),
        ),
    ]
