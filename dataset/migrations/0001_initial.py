# Generated by Django 4.1.7 on 2023-05-12 10:08

import dataset.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("project", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Folder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("folder_name", models.CharField(max_length=100)),
                (
                    "folder_path",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "folders",
                    models.ManyToManyField(
                        blank=True, related_name="subFolders", to="dataset.folder"
                    ),
                ),
                (
                    "parents",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parentFolders",
                        to="dataset.folder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProcessedDataset",
            fields=[
                ("is_active", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "subset",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Training", "training"),
                            ("Validation", "validation"),
                            ("Testing", "testing"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("sample_counts", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Processed Dataset",
            },
        ),
        migrations.CreateModel(
            name="RawDataset",
            fields=[
                (
                    "original_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("version_id", models.IntegerField(blank=True, default=0, null=True)),
                ("is_active", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                (
                    "train_ratio",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "val_ratio",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "test_ratio",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("compressed_file", models.FileField(upload_to=None)),
                (
                    "parent_folder",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataParentFolder",
                        to="dataset.folder",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projectDataset",
                        to="project.project",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Raw Dataset",
            },
        ),
        migrations.CreateModel(
            name="RawDatasetFile",
            fields=[
                (
                    "file_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=256, null=True)),
                ("file_path", models.CharField(blank=True, max_length=1024, null=True)),
                ("file_size", models.IntegerField(blank=True, null=True)),
                (
                    "file_extension",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "file_upload",
                    models.FileField(upload_to=dataset.models.get_upload_path),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dataset.folder",
                    ),
                ),
                (
                    "raw_dataset",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rawDatasetFile",
                        to="dataset.rawdataset",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Raw Dataset File",
            },
        ),
        migrations.CreateModel(
            name="ProcessedDatasetFile",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        blank=True, default=0, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "processed_dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processedDataFile",
                        to="dataset.processeddataset",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Processed Dataset File",
            },
        ),
        migrations.AddField(
            model_name="processeddataset",
            name="raw_dataset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="processedData",
                to="dataset.rawdataset",
            ),
        ),
        migrations.CreateModel(
            name="Annotations",
            fields=[
                ("is_active", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("COCO", "coco"),
                            ("Pascal VOC", "pascalVoc"),
                            ("YOLO", "yolo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("count", models.IntegerField(default=0)),
                (
                    "processed_dataset",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotations",
                        to="dataset.processeddataset",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Annotation",
            },
        ),
        migrations.CreateModel(
            name="AnnotationFile",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        blank=True, default=0, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "annotation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotationFile",
                        to="dataset.annotations",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Annotation File",
            },
        ),
    ]
